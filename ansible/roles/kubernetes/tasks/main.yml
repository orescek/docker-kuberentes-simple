---
  - name: install dep 
    import_tasks: dep.yml
      
  - name: set facts
    set_fact:
      translated_architecture: amd64
    when: ansible_architecture == 'x86_64'

  - name: Check if minikube already installed
    stat: 
      path: "{{ minikube_install_dir }}/minikube"
    become: yes
    changed_when: false
    register: minikube_installed

  - when: not minikube_installed.stat.exists 
    block:
      - name: get binaries
        get_url: url="{{ item.url }}" dest="{{ item.dest }}"
        become: yes
        with_items:
          - url: https://storage.googleapis.com/minikube/releases/{{ minikube_version }}/minikube-{{ ansible_system|lower }}-amd64
            dest: "{{ minikube_install_dir }}/minikube"
          - url: "https://storage.googleapis.com/kubernetes-release/release/{{ kubectl_version }}/bin/{{ ansible_system|lower }}/{{ translated_architecture }}/kubectl"
            dest: "{{ minikube_install_dir }}/kubectl"
          - url: "https://github.com/docker/machine/releases/download/{{ docker_machine_version }}/docker-machine-{{ ansible_system }}-{{ ansible_architecture }}"
            dest: "{{ minikube_install_dir }}/docker-machine"
      - name: chmod binaries
        file: dest="{{ minikube_install_dir }}/{{ item }}" mode=0755
        become: yes 
        with_items:
          - minikube
          - kubectl
          - docker-machine
      - name: start minikube 
        command: minikube start --vm-driver none
        async: 180
        poll: 5
        become: yes
    become: yes
    become_user: root

  - name: import docker image
    command: docker load -i /vagrant/{{ app_name }}.tar
    become: yes

  # before helm
  # - name: copy_pod_config
  #   template:
  #     src: pod.yaml.j2
  #     dest: /root/pod.yaml
  #   become: yes
  #   tags: kube

  # - name: start kubectl
  #   #command: kubectl run {{ app_name }} --image={{ app_name }}:{{ app_version }} --port={{ app_port }}
  #   command: kubectl create -f /root/pod.yaml
  #   become: yes
  #   tags: kube

  # - name: expose app
  #   command: kubectl expose Pod {{ app_name }} --type=LoadBalancer
  #   become: yes
  #   tags: kube

    

# commanda dobiÅ¡ tvojo app: kubectl get svc myapp -> podatke o njej



